@page "/inmuebleList"

@*<style>
    body {
        background-image: url(https://img.freepik.com/fotos-premium/fondo-textura-pared-ladrillo-blanco-moderno_35257-348.jpg?w=2000);
        background-size: cover;

    }
</style>*@

<h3>Inmuebles</h3>
<br />
<a href="/inmuebleAdd" role="button" class="btn btn-success">Agregar</a>
<br />

@if (result != null)
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Tipo</th>
                <th>Descripcion</th>
                <th>Ubicacion</th>
                <th>Costo</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ClienteSwagger.Inmueble inmueble in result)
            {
                <tr>
                    <th>@inmueble.InmuebleId</th>
                    <th>@tipos.Where(x=>x.TipoInmuebleId==inmueble.TipoInmuebleId).FirstOrDefault().TipoInmuebleDesc</th>
                    @*<th>@inmueble.TipoInmuebleId</th>*@
                    <th>@inmueble.InmuebleDesc</th>
                    <th>@inmueble.InmuebleUbic</th>
                    <th>@inmueble.InmuebleCosto</th>
                    <th><a href="inmuebleUpdate/@inmueble.InmuebleId" role="button" class="btn btn-primary">Editar</a></th>
                    <th><a href="inmuebleDelete/@inmueble.InmuebleId" role="button" class="btn btn-danger">Eliminar</a></th>

                   @* <th><a href="inmuebleUpdate/@inmueble.InmuebleId"><i>Editar</i></a></th>
                    <th><a href="inmuebleDelete/@inmueble.InmuebleId"><i>Eliminar</i></a></th>*@
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <h3>No se encontraron resultados</h3>
}


@code {

    private ICollection<ClienteSwagger.Inmueble> result;
    private ICollection<ClienteSwagger.TipoInmueble> tipos;

    private ClienteSwagger.ClienteSwagger client = new ClienteSwagger.ClienteSwagger("https://localhost:7179/", new HttpClient());

    private async Task Refresh()
    {
        result = await client.InmuebleAllAsync();

        tipos = await client.TipoInmuebleAllAsync();

        //tipo
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }
}
